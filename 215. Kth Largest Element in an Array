class Solution {
 public:
  int findKthLargest(vector<int>& nums, int k) {
    priority_queue<int, vector<int>, greater<>> minHeap;

    for (const int num : nums) {
      minHeap.push(num);
      if (minHeap.size() > k)
        minHeap.pop();
    }

    return minHeap.top();
  }
};

OUTPUT:
CASE 1:
nums = [3,2,1,5,6,4]
k =2
Output
5
Expected
5

CASE 2:
nums = [3,2,3,1,2,4,5,5,6]
k =4
Output
4
Expected
4
